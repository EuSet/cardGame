{"version":3,"sources":["Components/Bank/Bank.module.css","Components/Stakes/Stakes.module.css","Components/Cards/Cards.module.css","Components/PlayPage/PlayPage.module.css","redux/play-reducer.tsx","reportWebVitals.ts","Components/cardsimages/AC.png","Components/cardsimages/AD.png","Components/cardsimages/AH.png","Components/cardsimages/AS.png","Components/cardsimages/2C.png","Components/cardsimages/3C.png","Components/cardsimages/4C.png","Components/cardsimages/5C.png","Components/cardsimages/6C.png","Components/cardsimages/7C.png","Components/cardsimages/8C.png","Components/cardsimages/9C.png","Components/cardsimages/10C.png","Components/cardsimages/JC.png","Components/cardsimages/QC.png","Components/cardsimages/KC.png","Components/cardsimages/2D.png","Components/cardsimages/3D.png","Components/cardsimages/4D.png","Components/cardsimages/5D.png","Components/cardsimages/6D.png","Components/cardsimages/7D.png","Components/cardsimages/8D.png","Components/cardsimages/9D.png","Components/cardsimages/10D.png","Components/cardsimages/JD.png","Components/cardsimages/QD.png","Components/cardsimages/KD.png","Components/cardsimages/2S.png","Components/cardsimages/3S.png","Components/cardsimages/4S.png","Components/cardsimages/5S.png","Components/cardsimages/6S.png","Components/cardsimages/7S.png","Components/cardsimages/8S.png","Components/cardsimages/9S.png","Components/cardsimages/10S.png","Components/cardsimages/JS.png","Components/cardsimages/QS.png","Components/cardsimages/KS.png","Components/cardsimages/2H.png","Components/cardsimages/3H.png","Components/cardsimages/4H.png","Components/cardsimages/5H.png","Components/cardsimages/6H.png","Components/cardsimages/7H.png","Components/cardsimages/8H.png","Components/cardsimages/9H.png","Components/cardsimages/10H.png","Components/cardsimages/JH.png","Components/cardsimages/QH.png","Components/cardsimages/KH.png","Components/Common/cardsArray.tsx","redux/store.tsx","Components/Utills/localStorage.ts","Components/Bank/Bank.tsx","Components/Cards/CardsContainer.tsx","Components/Cards/Cards.tsx","Components/cardsimages/chipsimg/five.png","Components/cardsimages/chipsimg/twentyfive.png","Components/cardsimages/chipsimg/fifty.png","Components/cardsimages/chipsimg/onehundred.png","Components/Stakes/Stakes.tsx","Components/PlayPage/PlayPage.tsx","Components/Common/Selectors.tsx","Components/PlayPage/PlayPageContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","TYPES_OF_ACTIONS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cardsArray","value","image","src","aceC","alt","id","v1","twoC","threeC","fourC","fiveC","sixC","sevenC","eightC","nineC","tenC","jackC","queenC","kingC","twoD","threeD","fourD","fiveD","sixD","sevenD","eightD","nineD","tenD","jackD","queenD","kingD","twoS","threeS","fourS","fiveS","sixS","sevenS","eightS","nineS","tenS","jackS","queenS","kingS","twoH","threeH","fourH","fiveH","sixH","sevenH","eightH","nineH","tenH","jackH","queenH","kingH","aceD","aceH","aceS","initialState","cards","playTable","counterValuePlayer","counterValueComp","resultValuePlayer","resultComputerValue","showStartButton","stakePlayer","stakeComputer","bank","stopCompGame","type","SAVE_COUNT_VALUE","payload","getInitialState","READY_FOR_NEW_GAME","changeAceValue","CHANGE_ACE_VALUE","loosePlayer","RESULT_GAME_FOR_STAKES","looseComputer","reducers","combineReducers","playPage","state","action","getRandomCards","card","Math","floor","random","length","shuffleCards","newPlayTable","remainderCardFunc","remainderCards","i","filter","c","getCardFunc","changeAce","console","log","newValue","resultCardsPlayer","newCard","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","composeWithDevTools","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","Bank","props","Grid","className","b","container","spacing","item","CardsContainer","connect","map","d","justify","Stakes","React","memo","startGameFunction","getCard","stopGameFunction","placeBetBeforeStartGame","useState","setValue","s","chips","onClick","five","twentyFive","fifty","oneHundred","stake","buttons","Button","variant","color","disabled","PlayPage","placeBetBeforeStartGameAC","p","selectAllValues","PlayPageContainer","dispatch","useDispatch","useSelector","useCallback","PLACE_BET","useEffect","setTimeout","GET_ANOTHER_CARD","toggle","SET_TWO_CARDS_TO_PLAY_TABLE","TOGGLE_SHOW_START_BUTTON","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96f29103.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Bank_container__2K3RB\",\"value\":\"Bank_value__2x-_m\",\"bank\":\"Bank_bank__2wIHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stakes_container__3BNro\",\"chips\":\"Stakes_chips__6hK5k\",\"stake\":\"Stakes_stake__hTCZr\",\"buttons\":\"Stakes_buttons__2iGRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__2OYBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlayPage_container__1LwdA\"};","import {cardsArray} from \"../Components/Common/cardsArray\";\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof startGame> |\r\n    ReturnType<typeof getAnotherCard> |\r\n    ReturnType<typeof stopGame> |\r\n    ReturnType<typeof toggleShowStartButton> |\r\n    ReturnType<typeof getInitialState> |\r\n    ReturnType<typeof startComputerGame> |\r\n    ReturnType<typeof getAnotherCardForComp> |\r\n    ReturnType<typeof stopCompGame> |\r\n    ReturnType<typeof changeAceValue> |\r\n    ReturnType<typeof placeBetBeforeStartGame> |\r\n    ReturnType<typeof drawResultGame> |\r\n    ReturnType<typeof loosePlayer> |\r\n    ReturnType<typeof looseComputer>\r\n\r\nexport type PlayPageType = {\r\n    cards: Array<CardType>\r\n    playTable: Array<CardType>\r\n    counterValuePlayer: number\r\n    resultValuePlayer: number\r\n    counterValueComp: number\r\n    resultComputerValue: number\r\n    showStartButton: boolean\r\n    stakePlayer: number\r\n    stakeComputer: number\r\n    bank: number\r\n}\r\nexport type CardType = {\r\n    value: number,\r\n    image: JSX.Element,\r\n    id: string\r\n}\r\n\r\nexport enum TYPES_OF_ACTIONS {\r\n    SET_TWO_CARDS_TO_PLAY_TABLE = 'SET_TWO_CARDS_TO_PLAY_TABLE',\r\n    GET_ANOTHER_CARD = 'GET_ANOTHER_CARD',\r\n    SAVE_COUNT_VALUE = 'SAVE_COUNT_VALUE',\r\n    TOGGLE_SHOW_START_BUTTON = 'TOGGLE_SHOW_START_BUTTON',\r\n    READY_FOR_NEW_GAME = 'READY_FOR_NEW_GAME',\r\n    CHANGE_ACE_VALUE = 'CHANGE_ACE_VALUE',\r\n    PLACE_BET = 'PLACE_BET',\r\n    RESULT_GAME_FOR_STAKES = 'RESULT_GAME_FOR_STAKES'\r\n}\r\n\r\nexport const initialState: PlayPageType = {\r\n    cards: cardsArray,\r\n    playTable: [],\r\n    counterValuePlayer: 0,\r\n    counterValueComp: 0,\r\n    resultValuePlayer: 0,\r\n    resultComputerValue: 0,\r\n    showStartButton: true,\r\n    stakePlayer: 1000,\r\n    stakeComputer: 10000,\r\n    bank: 0,\r\n}\r\n\r\nexport const playReducer = (state: PlayPageType = initialState, action: ActionType) => {\r\n\r\n    function getRandomCards(): Array<CardType> {\r\n        function shuffleCards(): CardType {\r\n            const card = state.cards[Math.floor(Math.random() * state.cards.length)]\r\n            if (card.value === 1) {\r\n                card.value = 11\r\n            }\r\n            if (card.value === 11) {\r\n                if (state.counterValueComp === 11 || state.counterValuePlayer === 11) {\r\n                    card.value = 10\r\n                    return card\r\n                }\r\n            }\r\n            return card\r\n        }\r\n\r\n        const card = shuffleCards()\r\n        if (state.playTable[0]) {\r\n            if (state.playTable[0].id !== card.id) {\r\n                state.playTable = [...state.playTable, card]\r\n                return state.playTable\r\n            } else {\r\n                getRandomCards()\r\n            }\r\n        } else {\r\n            state.playTable = [...state.playTable, card]\r\n            return state.playTable\r\n        }\r\n        return state.playTable\r\n    }\r\n\r\n    function newPlayTable() {\r\n        getRandomCards()\r\n        getRandomCards()\r\n    }\r\n\r\n    function remainderCardFunc() {\r\n        let remainderCards: CardType[] = state.cards\r\n        for (let i = 0; i < state.playTable.length; i++) {\r\n            remainderCards = remainderCards.filter(c => c.id !== state.playTable[i].id)\r\n        }\r\n        return remainderCards\r\n    }\r\n\r\n    function getCardFunc() {\r\n        const card = remainderCardFunc()![Math.floor(Math.random() * remainderCardFunc()!.length)]\r\n        if (card.value === 1) {\r\n            card.value = 11\r\n        }\r\n        return card\r\n    }\r\n\r\n    function changeAce() {\r\n        console.log('change ace')\r\n\r\n        let newValue = state.counterValueComp > 0 ? state.counterValueComp : state.counterValuePlayer\r\n        if (newValue > 21) {\r\n            for (let i = 0; i < state.playTable.length; i++) {\r\n                if (state.playTable[i].value === 11 && newValue > 21) {\r\n                    newValue = newValue - state.playTable[i].value\r\n                    state.playTable[i].value = 1\r\n                    newValue = newValue + state.playTable[i].value\r\n                }\r\n            }\r\n        }\r\n        if (newValue > 21 && state.counterValueComp !== 0) {\r\n            newValue = 0\r\n            return newValue\r\n        }\r\n        return newValue\r\n    }\r\n\r\n    switch (action.type) {\r\n        case \"SET_TWO_CARDS_TO_PLAY_TABLE\":\r\n            newPlayTable()\r\n            switch (action.payload) {\r\n                case \"player\":\r\n                    return {\r\n                        ...state,\r\n                        playTable: state.playTable,\r\n                        cards: remainderCardFunc(),\r\n                        resultCardsPlayer: [],\r\n                        counterValuePlayer: (state.counterValuePlayer + state.playTable[0].value + state.playTable[1].value) === 22 ?\r\n                            21 : state.counterValuePlayer + state.playTable[0].value + state.playTable[1].value,\r\n                        resultValuePlayer: 0,\r\n                        resultComputerValue: 0\r\n                    }\r\n                case \"computer\":\r\n                    return {\r\n                        ...state,\r\n                        cards: remainderCardFunc(),\r\n                        playTable: state.playTable,\r\n                        counterValueComp: (state.counterValueComp + state.playTable[0].value + state.playTable[1].value) === 22 ?\r\n                            21 : state.counterValueComp + state.playTable[0].value + state.playTable[1].value\r\n                    }\r\n                default:\r\n                    return state\r\n            }\r\n        case \"GET_ANOTHER_CARD\":\r\n            const newCard = getCardFunc()\r\n            switch (action.payload) {\r\n                case 'player':\r\n                    return {\r\n                        ...state,\r\n                        cards: remainderCardFunc(),\r\n                        playTable: [...state.playTable, newCard],\r\n                        counterValuePlayer:  state.counterValuePlayer + newCard.value\r\n                    }\r\n                case 'computer':\r\n                    return {\r\n                        ...state,\r\n                        cards: remainderCardFunc(),\r\n                        playTable: [...state.playTable, newCard],\r\n                        counterValueComp: state.counterValueComp + newCard.value\r\n                    }\r\n                default:\r\n                    return state\r\n            }\r\n        case \"SAVE_COUNT_VALUE\":\r\n            switch (action.payload) {\r\n                case 'player':\r\n                    return {\r\n                        ...state,\r\n                        cards: remainderCardFunc(),\r\n                        resultValuePlayer: state.counterValuePlayer,\r\n                        counterValuePlayer: 0,\r\n                        playTable: [],\r\n                    }\r\n                case 'computer':\r\n                    return {\r\n                        ...state,\r\n                        resultComputerValue: state.counterValueComp,\r\n                        counterValueComp: 0,\r\n                        playTable: [],\r\n                        showStartButton: true\r\n                    }\r\n                default:\r\n                    return state\r\n\r\n            }\r\n        case \"TOGGLE_SHOW_START_BUTTON\":\r\n            return {\r\n                ...state,\r\n                showStartButton: !state.showStartButton\r\n            }\r\n        case \"READY_FOR_NEW_GAME\":\r\n            return {\r\n                ...state,\r\n                counterValuePlayer: 0,\r\n                cards: cardsArray,\r\n                playTable: [],\r\n                resultValuePlayer: 0,\r\n                counterValueComp: 0,\r\n                resultComputerValue: 0,\r\n                showStartButton: true,\r\n            }\r\n        case \"CHANGE_ACE_VALUE\":\r\n            return {\r\n                ...state,\r\n                counterValuePlayer: state.counterValueComp === 0 ? changeAce() : 0,\r\n                counterValueComp: state.counterValueComp > 0 ? changeAce() : 0,\r\n                playTable: state.playTable,\r\n            }\r\n        case \"PLACE_BET\":\r\n            return {\r\n                ...state,\r\n                stakePlayer: state.stakePlayer - action.value,\r\n                stakeComputer: state.stakeComputer - action.value,\r\n                bank: action.value * 2\r\n            }\r\n        case \"RESULT_GAME_FOR_STAKES\":\r\n            switch (action.payload) {\r\n                case \"draw\":\r\n                    return {\r\n                        ...state,\r\n                        stakePlayer: state.stakePlayer + (state.bank / 2),\r\n                        stakeComputer: state.stakeComputer + (state.bank / 2),\r\n                        bank: 0\r\n                    }\r\n                case \"comp loose\":\r\n                    return {\r\n                        ...state,\r\n                        stakePlayer: state.stakePlayer + state.bank,\r\n                        bank: 0\r\n                    }\r\n                case \"player loose\":\r\n                    return {\r\n                        ...state,\r\n                        stakeComputer: state.stakeComputer + state.bank,\r\n                        bank: 0\r\n                    }\r\n                default:\r\n                    return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const startGame = () => {\r\n    return {type: TYPES_OF_ACTIONS.SET_TWO_CARDS_TO_PLAY_TABLE, payload: 'player'} as const\r\n}\r\nexport const startComputerGame = () => {\r\n    return {type: TYPES_OF_ACTIONS.SET_TWO_CARDS_TO_PLAY_TABLE, payload: 'computer'} as const\r\n}\r\nexport const getAnotherCard = () => {\r\n    return {type: TYPES_OF_ACTIONS.GET_ANOTHER_CARD, payload: 'player'} as const\r\n}\r\nexport const getAnotherCardForComp = () => {\r\n    return {type: TYPES_OF_ACTIONS.GET_ANOTHER_CARD, payload: 'computer'} as const\r\n}\r\nexport const stopGame = () => {\r\n    return {type: TYPES_OF_ACTIONS.SAVE_COUNT_VALUE, payload: 'player'} as const\r\n}\r\nexport const stopCompGame = () => {\r\n    return {type: TYPES_OF_ACTIONS.SAVE_COUNT_VALUE, payload: 'computer'} as const\r\n}\r\nexport const toggleShowStartButton = (toggle: boolean) => {\r\n    return {type: TYPES_OF_ACTIONS.TOGGLE_SHOW_START_BUTTON, toggle} as const\r\n}\r\nexport const getInitialState = () => {\r\n    return {type: TYPES_OF_ACTIONS.READY_FOR_NEW_GAME} as const\r\n}\r\nexport const changeAceValue = () => {\r\n    return {type: TYPES_OF_ACTIONS.CHANGE_ACE_VALUE} as const\r\n}\r\nexport const placeBetBeforeStartGame = (value: number) => {\r\n    return {type: TYPES_OF_ACTIONS.PLACE_BET, value} as const\r\n}\r\nexport const drawResultGame = () => {\r\n    return {type: TYPES_OF_ACTIONS.RESULT_GAME_FOR_STAKES, payload: 'draw'} as const\r\n}\r\nexport const loosePlayer = () => {\r\n    return {type: TYPES_OF_ACTIONS.RESULT_GAME_FOR_STAKES, payload: 'player loose'} as const\r\n}\r\nexport const looseComputer = () => {\r\n    return {type: TYPES_OF_ACTIONS.RESULT_GAME_FOR_STAKES, payload: 'comp loose'} as const\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/AC.1048c60e.png\";","export default __webpack_public_path__ + \"static/media/AD.f3b345b1.png\";","export default __webpack_public_path__ + \"static/media/AH.cc5001d4.png\";","export default __webpack_public_path__ + \"static/media/AS.4832a80a.png\";","export default __webpack_public_path__ + \"static/media/2C.2fe3f08c.png\";","export default __webpack_public_path__ + \"static/media/3C.740490f6.png\";","export default __webpack_public_path__ + \"static/media/4C.03a77942.png\";","export default __webpack_public_path__ + \"static/media/5C.558517b0.png\";","export default __webpack_public_path__ + \"static/media/6C.3620f833.png\";","export default __webpack_public_path__ + \"static/media/7C.14a56224.png\";","export default __webpack_public_path__ + \"static/media/8C.a8bc06d1.png\";","export default __webpack_public_path__ + \"static/media/9C.6965773f.png\";","export default __webpack_public_path__ + \"static/media/10C.9ed3d91b.png\";","export default __webpack_public_path__ + \"static/media/JC.81c29a17.png\";","export default __webpack_public_path__ + \"static/media/QC.7c55d850.png\";","export default __webpack_public_path__ + \"static/media/KC.789e8068.png\";","export default __webpack_public_path__ + \"static/media/2D.ee39c7dc.png\";","export default __webpack_public_path__ + \"static/media/3D.e8d502dd.png\";","export default __webpack_public_path__ + \"static/media/4D.6198dfa5.png\";","export default __webpack_public_path__ + \"static/media/5D.0eeb59f1.png\";","export default __webpack_public_path__ + \"static/media/6D.d9bad49c.png\";","export default __webpack_public_path__ + \"static/media/7D.230fd8a6.png\";","export default __webpack_public_path__ + \"static/media/8D.f364d555.png\";","export default __webpack_public_path__ + \"static/media/9D.a24056d5.png\";","export default __webpack_public_path__ + \"static/media/10D.7ae9eea7.png\";","export default __webpack_public_path__ + \"static/media/JD.66d734e6.png\";","export default __webpack_public_path__ + \"static/media/QD.028ad7d4.png\";","export default __webpack_public_path__ + \"static/media/KD.2e5ab483.png\";","export default __webpack_public_path__ + \"static/media/2S.b0efcac0.png\";","export default __webpack_public_path__ + \"static/media/3S.9c2eae6c.png\";","export default __webpack_public_path__ + \"static/media/4S.8c4d9f8f.png\";","export default __webpack_public_path__ + \"static/media/5S.a4fb9b31.png\";","export default __webpack_public_path__ + \"static/media/6S.2a77a732.png\";","export default __webpack_public_path__ + \"static/media/7S.5275b8fb.png\";","export default __webpack_public_path__ + \"static/media/8S.2d48dd68.png\";","export default __webpack_public_path__ + \"static/media/9S.6b23955c.png\";","export default __webpack_public_path__ + \"static/media/10S.b2e5f800.png\";","export default __webpack_public_path__ + \"static/media/JS.47d62930.png\";","export default __webpack_public_path__ + \"static/media/QS.6ff68c33.png\";","export default __webpack_public_path__ + \"static/media/KS.ee2a7f62.png\";","export default __webpack_public_path__ + \"static/media/2H.44b256f0.png\";","export default __webpack_public_path__ + \"static/media/3H.ec26afbd.png\";","export default __webpack_public_path__ + \"static/media/4H.5c782cf1.png\";","export default __webpack_public_path__ + \"static/media/5H.89ec1438.png\";","export default __webpack_public_path__ + \"static/media/6H.490e85cf.png\";","export default __webpack_public_path__ + \"static/media/7H.e131e73a.png\";","export default __webpack_public_path__ + \"static/media/8H.ebac5b45.png\";","export default __webpack_public_path__ + \"static/media/9H.21b32cac.png\";","export default __webpack_public_path__ + \"static/media/10H.4c239d9d.png\";","export default __webpack_public_path__ + \"static/media/JH.28c2c59f.png\";","export default __webpack_public_path__ + \"static/media/QH.4bc634e4.png\";","export default __webpack_public_path__ + \"static/media/KH.3f8b3697.png\";","import React from \"react\";\r\nimport aceC from \"../cardsimages/AC.png\";\r\nimport aceD from \"../cardsimages/AD.png\";\r\nimport aceH from \"../cardsimages/AH.png\";\r\nimport aceS from \"../cardsimages/AS.png\";\r\nimport {v1} from \"uuid\";\r\nimport twoC from \"../cardsimages/2C.png\";\r\nimport threeC from \"../cardsimages/3C.png\";\r\nimport fourC from \"../cardsimages/4C.png\";\r\nimport fiveC from \"../cardsimages/5C.png\";\r\nimport sixC from \"../cardsimages/6C.png\";\r\nimport sevenC from \"../cardsimages/7C.png\";\r\nimport eightC from \"../cardsimages/8C.png\";\r\nimport nineC from \"../cardsimages/9C.png\";\r\nimport tenC from \"../cardsimages/10C.png\";\r\nimport jackC from \"../cardsimages/JC.png\";\r\nimport queenC from \"../cardsimages/QC.png\";\r\nimport kingC from \"../cardsimages/KC.png\";\r\nimport twoD from \"../cardsimages/2D.png\";\r\nimport threeD from \"../cardsimages/3D.png\";\r\nimport fourD from \"../cardsimages/4D.png\";\r\nimport fiveD from \"../cardsimages/5D.png\";\r\nimport sixD from \"../cardsimages/6D.png\";\r\nimport sevenD from \"../cardsimages/7D.png\";\r\nimport eightD from \"../cardsimages/8D.png\";\r\nimport nineD from \"../cardsimages/9D.png\";\r\nimport tenD from \"../cardsimages/10D.png\";\r\nimport jackD from \"../cardsimages/JD.png\";\r\nimport queenD from \"../cardsimages/QD.png\";\r\nimport kingD from \"../cardsimages/KD.png\";\r\nimport twoS from \"../cardsimages/2S.png\";\r\nimport threeS from \"../cardsimages/3S.png\";\r\nimport fourS from \"../cardsimages/4S.png\";\r\nimport fiveS from \"../cardsimages/5S.png\";\r\nimport sixS from \"../cardsimages/6S.png\";\r\nimport sevenS from \"../cardsimages/7S.png\";\r\nimport eightS from \"../cardsimages/8S.png\";\r\nimport nineS from \"../cardsimages/9S.png\";\r\nimport tenS from \"../cardsimages/10S.png\";\r\nimport jackS from \"../cardsimages/JS.png\";\r\nimport queenS from \"../cardsimages/QS.png\";\r\nimport kingS from \"../cardsimages/KS.png\";\r\nimport twoH from \"../cardsimages/2H.png\";\r\nimport threeH from \"../cardsimages/3H.png\";\r\nimport fourH from \"../cardsimages/4H.png\";\r\nimport fiveH from \"../cardsimages/5H.png\";\r\nimport sixH from \"../cardsimages/6H.png\";\r\nimport sevenH from \"../cardsimages/7H.png\";\r\nimport eightH from \"../cardsimages/8H.png\";\r\nimport nineH from \"../cardsimages/9H.png\";\r\nimport tenH from \"../cardsimages/10H.png\";\r\nimport jackH from \"../cardsimages/JH.png\";\r\nimport queenH from \"../cardsimages/QH.png\";\r\nimport kingH from \"../cardsimages/KH.png\";\r\nimport {CardType} from \"../../redux/play-reducer\";\r\n\r\nexport const cardsArray:Array<CardType> = [\r\n    {value:  11 || 1 || 10, image: <img src={aceC} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={twoC} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={threeC} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={fourC} alt={'#'}/>, id: v1()},\r\n    {value: 5, image: <img src={fiveC} alt={'#'}/>, id: v1()},\r\n    {value: 6, image: <img src={sixC} alt={'#'}/>, id: v1()},\r\n    {value: 7, image: <img src={sevenC} alt={'#'}/>, id: v1()},\r\n    {value: 8, image: <img src={eightC} alt={'#'}/>, id: v1()},\r\n    {value: 9, image: <img src={nineC} alt={'#'}/>, id: v1()},\r\n    {value: 10, image: <img src={tenC} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={jackC} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={queenC} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={kingC} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={twoD} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={threeD} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={fourD} alt={'#'}/>, id: v1()},\r\n    {value: 5, image: <img src={fiveD} alt={'#'}/>, id: v1()},\r\n    {value: 6, image: <img src={sixD} alt={'#'}/>, id: v1()},\r\n    {value: 7, image: <img src={sevenD} alt={'#'}/>, id: v1()},\r\n    {value: 8, image: <img src={eightD} alt={'#'}/>, id: v1()},\r\n    {value: 9, image: <img src={nineD} alt={'#'}/>, id: v1()},\r\n    {value: 10, image: <img src={tenD} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={jackD} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={queenD} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={kingD} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={twoS} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={threeS} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={fourS} alt={'#'}/>, id: v1()},\r\n    {value: 5, image: <img src={fiveS} alt={'#'}/>, id: v1()},\r\n    {value: 6, image: <img src={sixS} alt={'#'}/>, id: v1()},\r\n    {value: 7, image: <img src={sevenS} alt={'#'}/>, id: v1()},\r\n    {value: 8, image: <img src={eightS} alt={'#'}/>, id: v1()},\r\n    {value: 9, image: <img src={nineS} alt={'#'}/>, id: v1()},\r\n    {value: 10, image: <img src={tenS} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={jackS} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={queenS} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={kingS} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={twoH} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={threeH} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={fourH} alt={'#'}/>, id: v1()},\r\n    {value: 5, image: <img src={fiveH} alt={'#'}/>, id: v1()},\r\n    {value: 6, image: <img src={sixH} alt={'#'}/>, id: v1()},\r\n    {value: 7, image: <img src={sevenH} alt={'#'}/>, id: v1()},\r\n    {value: 8, image: <img src={eightH} alt={'#'}/>, id: v1()},\r\n    {value: 9, image: <img src={nineH} alt={'#'}/>, id: v1()},\r\n    {value: 10, image: <img src={tenH} alt={'#'}/>, id: v1()},\r\n    {value: 2, image: <img src={jackH} alt={'#'}/>, id: v1()},\r\n    {value: 3, image: <img src={queenH} alt={'#'}/>, id: v1()},\r\n    {value: 4, image: <img src={kingH} alt={'#'}/>, id: v1()},\r\n    {value:  11 || 1 || 10, image: <img src={aceD} alt={'#'}/>, id: v1()},\r\n    {value:  11 || 1 || 10, image: <img src={aceH} alt={'#'}/>, id: v1()},\r\n    {value:  11 || 1 || 10, image: <img src={aceS} alt={'#'}/>, id: v1()}\r\n\r\n\r\n]\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {playReducer} from \"./play-reducer\";\r\nimport {loadState, saveState} from \"../Components/Utills/localStorage\";\r\n\r\nlet reducers = combineReducers({\r\n    playPage: playReducer,\r\n})\r\nexport type StateType = ReturnType<typeof reducers>\r\nexport let store = createStore(reducers, loadState(), composeWithDevTools(applyMiddleware(thunk)) )\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        playPage: store.getState().playPage\r\n    })\r\n})\r\n","import {StateType} from \"../../redux/store\";\r\n\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state:StateType) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport b from \"./Bank.module.css\"\r\n\r\ntype PropsType = {\r\n    counterValueComp: number\r\n    resultComputerValue: number\r\n    counterValuePlayer: number\r\n    resultValuePlayer: number\r\n    bank: number\r\n}\r\nexport const Bank: React.FC<PropsType> = props => {\r\n    const {\r\n        counterValueComp,\r\n        resultComputerValue,\r\n        counterValuePlayer,\r\n        resultValuePlayer,\r\n        bank\r\n    } = props\r\n    return <Grid className={b.container} spacing={9} container>\r\n        <Grid item>\r\n        <div className={b.value}>\r\n            {!resultComputerValue ?\r\n                <span>{counterValueComp}</span>\r\n                :\r\n                <span>{resultComputerValue}</span>\r\n            }\r\n        </div>\r\n        </Grid>\r\n        <Grid item>\r\n        <div className={b.bank}>\r\n            <h2>Bank</h2>\r\n            <span>{bank}</span>\r\n        </div>\r\n        </Grid>\r\n        <Grid item>\r\n        <div className={b.value}>\r\n            {!resultValuePlayer ?\r\n                <span>{counterValuePlayer}</span>\r\n                :\r\n                <span>{resultValuePlayer}</span>\r\n            }\r\n        </div>\r\n        </Grid>\r\n    </Grid>\r\n\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/store\";\r\nimport {Cards} from \"./Cards\";\r\n\r\nexport const mapStateToProps = (state:StateType) => {\r\n    return {\r\n        playTable: state.playPage.playTable,\r\n        resultValuePlayer: state.playPage.resultValuePlayer,\r\n    }\r\n}\r\n\r\nexport const CardsContainer = connect(mapStateToProps)(Cards)\r\n","import React from \"react\";\r\nimport d from \"./Cards.module.css\"\r\nimport {CardType} from \"../../redux/play-reducer\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport type PropsType = {\r\n    playTable: Array<CardType>\r\n    resultValuePlayer: number\r\n}\r\nexport const Cards = (props: PropsType) => {\r\n\r\n    let cards = props.playTable.map(c => {\r\n        return <Grid key={c.id} item>\r\n            <div key={c.id} className={d.cards}>\r\n                {c.image}\r\n            </div>\r\n        </Grid>\r\n    })\r\n    return <div>\r\n    <Grid justify={\"center\"} container>\r\n            {cards}\r\n        </Grid>\r\n    </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/five.43b8aba4.png\";","export default __webpack_public_path__ + \"static/media/twentyfive.aabcdd9f.png\";","export default __webpack_public_path__ + \"static/media/fifty.f5e885cc.png\";","export default __webpack_public_path__ + \"static/media/onehundred.74965bce.png\";","import React, {useState} from \"react\";\r\nimport five from \"./../cardsimages/chipsimg/five.png\";\r\nimport twentyFive from \"./../cardsimages/chipsimg/twentyfive.png\";\r\nimport fifty from \"./../cardsimages/chipsimg/fifty.png\";\r\nimport oneHundred from \"./../cardsimages/chipsimg/onehundred.png\";\r\nimport s from \"./Stakes.module.css\"\r\nimport {Button, Grid} from \"@material-ui/core\";\r\n\r\ntype PropsType = {\r\n    stakePlayer:number\r\n    bank:number\r\n    placeBetBeforeStartGame:(value:number) => void\r\n    startGameFunction: () => void\r\n    getCard: () => void\r\n    stopGameFunction: () => void\r\n    showStartButton: boolean\r\n    resultValuePlayer:number\r\n}\r\n\r\nexport const Stakes: React.FC<PropsType> = React.memo( (props) => {\r\n    const {\r\n        bank,\r\n        showStartButton,\r\n        startGameFunction,\r\n        resultValuePlayer,\r\n        getCard,\r\n        stopGameFunction,\r\n        stakePlayer,\r\n        placeBetBeforeStartGame,\r\n    } = props\r\n    console.log('Stakes')\r\n    const [value, setValue] = useState(0)\r\n    return <Grid className={s.container} container>\r\n        <div>\r\n        <Grid className={s.chips} container>\r\n            <div>\r\n            <img onClick={() => {setValue(value + 5)}} src={five} alt={'5'}/>\r\n            <img onClick={() => {setValue(value + 5)}} src={five} alt={'5'}/>\r\n            </div>\r\n            <div>\r\n            <img onClick={() => {setValue(value + 25)}} src={twentyFive} alt={'25'}/>\r\n            <img onClick={() => {setValue(value + 50)}} src={fifty} alt={'50'}/>\r\n            <img onClick={() => {setValue(value + 100)}} src={oneHundred} alt={'100'}/>\r\n            </div>\r\n            <div>\r\n                <span className={s.stake}>${stakePlayer}</span>\r\n            </div>\r\n        </Grid>\r\n        </div>\r\n        <div className={s.buttons}>\r\n            <div>\r\n            {value !== 0 ? <span>{value}</span> :\r\n                bank === 0 ?\r\n                    <span>Place Bet</span> : ''}\r\n            </div>\r\n            <div>\r\n            {bank !== 0 ?\r\n                <div>\r\n                    {showStartButton ? <Button variant={\"contained\"} color={\"secondary\"} onClick={startGameFunction}>start</Button> : ''}\r\n                    {resultValuePlayer === 0 ? <Button variant={\"contained\"} color={\"secondary\"} disabled={showStartButton} onClick={getCard}>get\r\n                    </Button> : ''}\r\n                    {resultValuePlayer === 0 ?\r\n                        <Button variant={\"contained\"} color={\"secondary\"} disabled={showStartButton} onClick={stopGameFunction}>stop</Button> : ''}\r\n                </div>\r\n                : <Button variant={\"contained\"} color={\"secondary\"} onClick={() => {\r\n                    placeBetBeforeStartGame(value)\r\n                    setValue(0)\r\n                }}>Bet</Button>}\r\n            </div>\r\n        </div>\r\n    </Grid>\r\n\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {Bank} from \"../Bank/Bank\";\r\nimport {CardsContainer} from \"../Cards/CardsContainer\";\r\nimport p from \"./PlayPage.module.css\"\r\nimport {Stakes} from \"../Stakes/Stakes\";\r\n\r\ntype PropsType = {\r\n    counterValuePlayer: number\r\n    resultValuePlayer: number\r\n    showStartButton: boolean\r\n    counterValueComp: number\r\n    resultComputerValue: number\r\n    bank: number\r\n    stakePlayer: number\r\n    placeBetBeforeStartGameAC: (value: number) => void\r\n    startGameFunction: () => void\r\n    getCard: () => void\r\n    stopGameFunction: () => void\r\n}\r\nexport const PlayPage: React.FC<PropsType> = props => {\r\n    const {\r\n        counterValuePlayer,\r\n        resultValuePlayer,\r\n        showStartButton,\r\n        counterValueComp,\r\n        resultComputerValue,\r\n        bank,\r\n        stakePlayer,\r\n        placeBetBeforeStartGameAC,\r\n        startGameFunction,\r\n        getCard,\r\n        stopGameFunction\r\n    } = props\r\n\r\n    return <Grid className={p.container} container>\r\n        <Grid item>\r\n        <Bank counterValueComp={counterValueComp}\r\n              resultComputerValue={resultComputerValue}\r\n              counterValuePlayer={counterValuePlayer}\r\n              resultValuePlayer={resultValuePlayer}\r\n              bank={bank}\r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n        <CardsContainer/>\r\n        </Grid>\r\n        <Grid item>\r\n        <Stakes\r\n            bank={bank}\r\n            stakePlayer={stakePlayer}\r\n            placeBetBeforeStartGame={placeBetBeforeStartGameAC}\r\n            showStartButton={showStartButton}\r\n            getCard={getCard}\r\n            startGameFunction={startGameFunction}\r\n            stopGameFunction={stopGameFunction}\r\n            resultValuePlayer={resultValuePlayer}\r\n        />\r\n        </Grid>\r\n    </Grid>\r\n}\r\n","import {StateType} from \"../../redux/store\";\r\n\r\ninterface IRootState extends StateType {}\r\n\r\nexport const selectAllValues = (state: IRootState) => state.playPage;\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    ActionType,\r\n    changeAceValue,\r\n    drawResultGame,\r\n    getAnotherCard,\r\n    getAnotherCardForComp,\r\n    getInitialState,\r\n    looseComputer,\r\n    loosePlayer,\r\n    placeBetBeforeStartGame,\r\n    startComputerGame,\r\n    startGame,\r\n    stopCompGame,\r\n    stopGame,\r\n    toggleShowStartButton\r\n} from \"../../redux/play-reducer\";\r\nimport {PlayPage} from \"./PlayPage\"\r\nimport {Dispatch} from \"redux\";\r\nimport {selectAllValues} from \"../Common/Selectors\";\r\nimport React, {useCallback, useEffect} from \"react\";\r\n\r\nexport const PlayPageContainer = () => {\r\n    const dispatch = useDispatch<Dispatch<ActionType>>()\r\n    const {\r\n        counterValuePlayer, resultValuePlayer,\r\n        showStartButton, counterValueComp, resultComputerValue, bank,\r\n        stakePlayer\r\n    } = useSelector(selectAllValues)\r\n    const startGameFunction = () => {\r\n        dispatch(getInitialState())\r\n        dispatch(startGame())\r\n        dispatch(toggleShowStartButton(false))\r\n    }\r\n    const getCard = () => {\r\n        dispatch(getAnotherCard())\r\n        dispatch(changeAceValue())\r\n    }\r\n    const stopGameFunction = () => {\r\n        dispatch(stopGame())\r\n        dispatch(startComputerGame())\r\n    }\r\n    const placeBetBeforeStartGameAC = useCallback((value: number) => {\r\n        dispatch(placeBetBeforeStartGame(value))\r\n    },[dispatch])\r\n\r\n    useEffect(() => {\r\n        if (counterValueComp > 0 && counterValueComp < 17) {\r\n            setTimeout(() => {\r\n                dispatch(getAnotherCardForComp())\r\n                dispatch(changeAceValue())\r\n            }, 3000)\r\n        }\r\n        if (counterValueComp <= 21 && counterValueComp >= 17) {\r\n            setTimeout(() => {\r\n                if (counterValueComp > resultValuePlayer) {\r\n                    dispatch(stopCompGame())\r\n                    dispatch(loosePlayer())\r\n                }\r\n                if (counterValueComp < resultValuePlayer || counterValueComp === 0) {\r\n                    dispatch(stopCompGame())\r\n                    dispatch(looseComputer())\r\n                }\r\n                if (counterValueComp === resultValuePlayer) {\r\n                    dispatch(stopCompGame())\r\n                    dispatch(drawResultGame())\r\n                }\r\n            }, 3000)\r\n\r\n        }\r\n        if (counterValueComp === 0) {\r\n            setTimeout(() => {\r\n                dispatch(getInitialState())\r\n                dispatch(looseComputer())\r\n            }, 2000)\r\n\r\n        }\r\n    }, [dispatch, resultValuePlayer, counterValueComp])\r\n    useEffect(() => {\r\n        if (counterValuePlayer > 21) {\r\n            setTimeout(() => {\r\n                dispatch(getInitialState())\r\n                dispatch(loosePlayer())\r\n            },1500)\r\n        }\r\n    }, [dispatch, counterValuePlayer])\r\n    return <PlayPage\r\n        stakePlayer={stakePlayer}\r\n        bank={bank}\r\n        counterValueComp={counterValueComp}\r\n        counterValuePlayer={counterValuePlayer}\r\n        resultComputerValue={resultComputerValue}\r\n        resultValuePlayer={resultValuePlayer}\r\n        showStartButton={showStartButton}\r\n        startGameFunction={startGameFunction}\r\n        getCard={getCard}\r\n        stopGameFunction={stopGameFunction}\r\n        placeBetBeforeStartGameAC={placeBetBeforeStartGameAC}\r\n    />\r\n\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {PlayPageContainer} from \"./Components/PlayPage/PlayPageContainer\";\nimport {Container} from \"@material-ui/core\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Container>\n                <PlayPageContainer/>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport App from \"./App\";\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById(\"root\"));\n// ReactDOM.render(\n//   <React.StrictMode>\n//       <Provider store={store}>\n//           <App/>\n//       </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}